<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/03/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>渗透测试流程</title>
    <url>/2022/03/15/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h2 id="收集什么"><a href="#收集什么" class="headerlink" title="收集什么"></a>收集什么</h2><h3 id="whois注册信息"><a href="#whois注册信息" class="headerlink" title="whois注册信息"></a>whois注册信息</h3><p>注册人的姓名，联系方式，邮箱（社工或者制作爆破字典有用）,DNS服务商等等邮箱收集。确定目标邮件服务器所在的真实位置，检测服务器自身有无错误配置，比如禁用vrey或expn命令导致用户信息泄露。然后从whois中获取域名的注册人、管理员邮箱，利用搜索引擎或者社工库查看有无泄露的密码，然后尝试泄露的密码进行登录，最后错目标网站点上收集邮箱</p>
<h3 id="CMS类型"><a href="#CMS类型" class="headerlink" title="CMS类型"></a>CMS类型</h3><p>查看目标的CMS，利用相关的bug进行测试，进行代码审计。CMS识别方式有网站特有文件，例如&#x2F;templets&#x2F;default&#x2F;style&#x2F;dedecms.css — dedecms；网站独有文件的 md5，例如 favicon.ico，但是该文件可以被修改导致不准确；网站命名规则；返回头的关键字；网页关键字；URL 特征；Meta 特征；Script 特征；robots.txt；网站路径特征；网站静态资源；爬取网站目录信息；常用的工具有 <a href="http://www.yunsee.cn/">云悉</a>，<a href="http://www.iguoli.cn/cms.php">工具 1</a>，<a href="http://whatweb.bugscaner.com/look/">BugScaner</a>。</p>
<p>DNS分析。找到mx，ns，cname记录，域传送漏洞</p>
<p>子域名。子域名对应IP，得到C段，各个子站网站指纹</p>
<p>真实IP与端口情况。IP反查域名，端口服务识别</p>
<p>历史漏洞。</p>
<p>其他平台信息泄露。Github，LinkedIn</p>
<h3 id="目标-IP"><a href="#目标-IP" class="headerlink" title="目标 IP"></a>目标 IP</h3><p>现在大部分网站都加了 CDN,CDN 的虚假 IP 干扰了我们的渗透测试，如何绕过 CDN 查找到目标的真实 IP，对我们来说非常重要。首先，我们需要判断下是否存在 CDN, 方法很简单，只要在不同地区进行 ping 检测就可以知道。不同地区 ping 同一个网址，得到不同的 IP 地址，那么该网站开启了 CDN 加速，相反如果得到的是同一个 IP 地址，那么极大可能不存在 cdn，但是不绝对。常用的工具有<a href="http://ping.chinaz.com/">多个地点 ping 服务器 - 网站测速 - 站长工具</a>。其次，绕过 CDN 获取真实 IP 的方法互联网上有很多，我常用的有二级域名法，目标长得一般不会把所有的二级域名放在 cdn 上，伤钱呐，确定了没有使用 CDN 的二级域名后，本地将目标域名绑定到同 ip，能访问就说明目标站与二级域名在同一服务器叶可能在同 C 段，扫描 C 段所有开 80 端口的 ip，挨个尝试。nslookup 法，大部分 CDN 提供商只针对国内市场，而对国外市场几乎是不做 CDN，所以有很大的几率直接解析到真实 IP，不过需要国外的冷门的 DNS</p>
<h3 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h3><p>在渗透测试的时候，往往主站的防御会很强，常常无从下手，那么子站就是一个重要的突破口，因此子域名是渗透测试的主要关注对象，子域名搜集的越完整，那么挖到的漏洞就可能更多，甚至漏洞的级别也会更高。常用的工具有：搜索引擎（google，baidu，bing）,DNS 区域传送漏洞，子域名挖掘机 Layer,subDomainsBrute,<a href="https://phpinfo.me/domain/">phpinfo.me</a>, 定制字典暴力破解。</p>
<h3 id="旁站-C-段查询"><a href="#旁站-C-段查询" class="headerlink" title="旁站 C 段查询"></a>旁站 C 段查询</h3><p>旁站是和目标网站在同一台服务器上的其它的网站；如果从目标站本身找不到好的入手点，这时候，如果想快速拿下目标的话，一般都会先找个目标站点所在服务器上其他的比较好搞的站下手，然后再想办法跨到真正目标的站点目录中。C 段是和目标机器 ip 处在同一个 C 段的其它机器；通过目标所在 C 段的其他任一台机器，想办法跨到我们的目标机器上。常用的工具有 webscancc，Nmap，Zenmap。</p>
<h3 id="敏感目录-x2F-文件"><a href="#敏感目录-x2F-文件" class="headerlink" title="敏感目录 &#x2F; 文件"></a>敏感目录 &#x2F; 文件</h3><p>用扫描器扫描目录，这时候你需要一本强大的字典，重在平时积累。字典越强扫描处的结果可能越多，这一步主要扫出网站的管理员入口，一些敏感文件（.mdb,.excel,.word,.zip,.rar）, 查看是否存在源代码泄露。常见有. git 文件泄露，.svn 文件泄露，.DB_store 文件泄露，WEB-INF&#x2F;web.xml 泄露。目录扫描有两种方式，使用目录字典进行暴力才接存在该目录或文件返回 200 或者 403；使用爬虫爬行主页上的所有链接，对每个链接进行再次爬行，收集这个域名下的所有链接，然后总结出需要的信息。常用的工具有：御剑，kali 下的 dirb，DirBrute。</p>
<h3 id="端口信息"><a href="#端口信息" class="headerlink" title="端口信息"></a>端口信息</h3><p>服务和安全是相对应的，每开启一个端口，那么攻击面就大了一点，开启的端口越多，也就意味着服务器面临的威胁越大。开始扫描之前不妨使用 telnet 先简单探测下某些端口是否开放，避免使用扫描器而被封 IP，扫描全端口一般使用 Nmap，masscan 进行扫描探测，尽可能多的搜集开启的端口好已经对应的服务版本，得到确切的服务版本后可以搜索有没有对应版本的漏洞。常见的端口信息及渗透方法。</p>
<p>端口号 端口服务 &#x2F; 协议简要说明 关于端口可能的一些渗透用途 tcp 20,21 ftp 默认的数据和命令传输端口 [可明文亦可加密传输] 允许匿名的上传下载，爆破，嗅探，win 提权，远程执行 (proftpd 1.3.5), 各类后门 (proftpd,vsftp 2.3.4)</p>
<p>tcp 22ssh [数据 ssl 加密传输] 可根据已搜集到的信息尝试爆破，v1 版本可中间人，ssh 隧道及内网代理转发，文件传输，等等… 常用于 linux 远程管理…</p>
<p>tcp 23telnet [明文传输] 爆破，嗅探，一般常用于路由，交换登陆，可尝试弱口令，也许会有意想不到的收获</p>
<p>tcp 25smtp [简单邮件传输协议，多数 linux 发行版可能会默认开启此服务] 邮件伪造，vrfy&#x2F;expn 查询邮件用户信息，可使用 smtp-user-enum 工具来自动跑</p>
<p>tcp&#x2F;udp 53dns [域名解析] 允许区域传送，dns 劫持，缓存投毒，欺骗以及各种基于 dns 隧道的远控</p>
<p>tcp&#x2F;udp 69tftp [简单文件传输协议，无认证] 尝试下载目标及其的各类重要配置文件</p>
<p>tcp 80-89,443,8440-8450,8080-8089web [各种常用的 web 服务端口] 各种常用 web 服务端口，可尝试经典的 top n,vpn,owa,webmail, 目标 oa, 各类 java 控制台，各类服务器 web 管理面板，各类 web 中间件漏洞利用，各类 web 框架漏洞利用等等……</p>
<p>tcp 110 [邮局协议，可明文可密文] 可尝试爆破，嗅探</p>
<p>tcp 137,139,445samba [smb 实现 windows 和 linux 间文件共享，明文] 可尝试爆破以及 smb 自身的各种远程执行类漏洞利用，如，ms08-067,ms17-010, 嗅探等……</p>
<p>tcp 143imap [可明文可密文] 可尝试爆破</p>
<p>udp 161snmp [明文] 爆破默认团队字符串，搜集目标内网信息</p>
<p>tcp 389ldap [轻量级目录访问协议] ldap 注入，允许匿名访问，弱口令</p>
<p>tcp 512,513,514linux rexec 可爆破，rlogin 登陆</p>
<p>tcp 873rsync 备份服务匿名访问，文件上传</p>
<p>tcp 1194openvpn 想办法钓 vpn 账号，进内网</p>
<p>tcp 1352Lotus domino 邮件服务弱口令，信息泄漏，爆破</p>
<p>tcp 1433mssql 数据库注入，提权，sa 弱口令，爆破</p>
<p>tcp 1521oracle 数据库 tns 爆破，注入，弹 shell…</p>
<p>tcp 1500ispmanager 主机控制面板弱口令</p>
<p>tcp 1025,111,2049nfs 权限配置不当</p>
<p>tcp 1723pptp 爆破，想办法钓 vpn 账号，进内网</p>
<p>tcp 2082,2083cpanel 主机管理面板登录弱口令</p>
<p>tcp 2181zookeeper 未授权访问</p>
<p>tcp 2601,2604zebra 路由默认密码 zerbra</p>
<p>tcp 3128squid 代理服务弱口令</p>
<p>tcp 3312,3311kangle 主机管理登录弱口令</p>
<p>tcp 3306mysql 数据库注入，提权，爆破</p>
<p>tcp 3389windows rdp 远程桌面 shift 后门 [需要 03 以下的系统], 爆破，ms12-020 [蓝屏 exp]</p>
<p>tcp 4848glassfish 控制台弱口令</p>
<p>tcp 4899radmin 远程桌面管理工具，现在已经非常非常少了抓密码拓展机器</p>
<p>tcp 5000sybase&#x2F;DB2 数据库爆破，注入</p>
<p>tcp 5432postgresql 数据库爆破，注入，弱口令</p>
<p>tcp 5632pcanywhere 远程桌面管理工具抓密码，代码执行，已经快退出历史舞台了</p>
<p>tcp 5900,5901,5902vnc 远程桌面管理工具弱口令爆破，如果信息搜集不到位，成功几率很小</p>
<p>tcp 5984CouchDB 未授权导致的任意指令执行</p>
<p>tcp 6379redis 未授权可尝试未授权访问，弱口令爆破</p>
<p>tcp 7001,7002weblogic 控制台 java 反序列化，弱口令</p>
<p>tcp 7778kloxo 主机面板登录</p>
<p>tcp 8000Ajenti 主机控制面板弱口令</p>
<p>tcp 8443plesk 主机控制面板弱口令</p>
<p>tcp 8069zabbix 远程执行，sql 注入</p>
<p>tcp 8080-8089Jenkins,jboss 反序列化，控制台弱口令</p>
<p>tcp 9080-9081,9090websphere 控制台 java 反序列化 &#x2F; 弱口令</p>
<p>tcp 9200,9300elasticsearch 远程执行</p>
<p>tcp 10000webmin linux 主机 web 控制面板入口弱口令</p>
<p>tcp 11211memcached 未授权访问</p>
<p>tcp 27017,27018mongodb 爆破，未授权访问</p>
<p>tcp 3690svn 服务 svn 泄露，未授权访问</p>
<p>tcp 50000SAP Management Console 远程执行</p>
<p>tcp 50070,50030hadoop 默认端口未授权访问</p>
<p>0×10 服务器与中间件信息</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>探测目标是否存在 WAF，WAF 识别一般是基于 headers 头信息，例如，Mod_Security 是为 Apache 设计的开源 Web 防护模块，一个恶意的请求 Mod_Security 会在响应头返回 “406 Not acceptable” 的信息。waf00f 是 kali 下的识别 WAF 的老工具，<a href="https://github.com/Ekultek/WhatWaf">whatwaf</a> 不仅可以识别 WAF 类型还会给出一些 bypass 方法；另外从乌云镜像站、CNVD 搜集网站历史漏洞对渗透测试也是有很大帮助的。</p>
<h2 id="渗透准备"><a href="#渗透准备" class="headerlink" title="渗透准备"></a>渗透准备</h2><ul>
<li>指纹识别。网站目录，服务器操作系统，httpserver，网站语言，框架，cms类型，数据库类型，是否有WAF</li>
<li>敏感文件&#x2F;目录。.git&#x2F;.svn&#x2F;rebots.txt&#x2F;phpinfo.php&#x2F;后台登陆页面&#x2F;网站源码备份&#x2F;上传页面</li>
<li>弱口令探测。各种登陆若口令，后台弱口令，各个服务（ftp，ssh，telnet，openssl，smb，mssql，oracle，mysql，3389，postgres，phpmyadmin，redis，weblogic，tomcat，jboss，memcache，mongodb，webservice）</li>
</ul>
]]></content>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的第一个博客</title>
    <url>/2022/04/18/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="github项目创建"><a href="#github项目创建" class="headerlink" title="github项目创建"></a>github项目创建</h2><p><img src="E:\software\Typora\typora-user-images\image-20220311153356061.png" alt="image-20220311153356061"></p>
<h2 id="安装node和Git"><a href="#安装node和Git" class="headerlink" title="安装node和Git"></a>安装node和Git</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p><a href="https://blog.csdn.net/muzidigbig/article/details/80493880">https://blog.csdn.net/muzidigbig/article/details/80493880</a></p>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600">https://www.liaoxuefeng.com/wiki/896043488029600</a></p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>1.打开cmd命令编辑器<br>2.输入hexo-cli指令</p>
<p><img src="E:\software\Typora\typora-user-images\image-20220311154459091.png" alt="image-20220311154459091"></p>
<p>3.新建一个博客文件夹，进入文件夹单机鼠标右键 — 选择 Git Bash here– 出现命令窗口，输入下面命令：</p>
<p><code>$ hexo init blog</code></p>
<p>出现<code>INFO Start blogging with Hexo!</code>表示Hexo初始化安装成功</p>
<p>4.输入命令(生成静态文件)</p>
<p><code>$ hexo g</code> </p>
<p>5.启动本地服务器(简写:hexo s)</p>
<p><code>$ hexo server</code></p>
<p><img src="E:\software\Typora\typora-user-images\image-20220311155855152.png" alt="image-20220311155855152"></p>
<p>打开浏览器，输入网址： <a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p><img src="E:\software\Typora\typora-user-images\image-20220311155730396.png" alt="image-20220311155730396"></p>
<h3 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h3><p>1.打开Git命令窗户</p>
<p><code>$ ssh-keygen -t rsa -C &quot;123@qq.com&quot; //Github的注册邮箱地址</code></p>
<p>2.一路Enter就行，生成SSH Key,记事本打开id_rsa.pub,复制</p>
<p><img src="E:\software\Typora\typora-user-images\image-20220311160429039.png" alt="image-20220311160429039"></p>
<p>3.打开github，点击 New SSH key —— Title：blog —— Key：输入刚才复制的 —— Add SSH key</p>
<p>4.添加Git的user name和Email</p>
<p><code>$ git config --global user.name &quot;liuxianan&quot; // github用户名</code></p>
<p><code>$ git config --global user.email &quot;git@github.com&quot; // github注册邮箱</code></p>
<p>5.测试是否添加成功</p>
<p><img src="E:\software\Typora\typora-user-images\image-20220311161116750.png" alt="image-20220311161116750"></p>
<h3 id="更换喜欢的博客主题"><a href="#更换喜欢的博客主题" class="headerlink" title="更换喜欢的博客主题"></a>更换喜欢的博客主题</h3><p>1.在自己创建的hexo_blog&#x2F;blog输入命令</p>
<p><code>$ git clone https://github.com/gaussic/hexo-theme-Anatole.git.themes/Anatole</code></p>
<p>2.更改配置</p>
<p>  更改一下blog工程(文件夹)目录下的配置文件_config.yml，主题名修改</p>
<p><img src="E:\software\Typora\typora-user-images\image-20220311161733793.png" alt="image-20220311161733793"></p>
<p>3.设置deployment参数信息</p>
<p><img src="E:\software\Typora\typora-user-images\image-20220311161826277.png" alt="image-20220311161826277"></p>
<p>4.安装 Git 部署插件</p>
<p><code>$ npm install hexo-deployer-git --save</code></p>
<p>5.发布到网上</p>
<p><code>$ hexo s</code></p>
]]></content>
  </entry>
</search>
